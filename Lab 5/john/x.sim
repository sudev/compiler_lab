factorial:
PUSH R1
PUSH R1
MOV R1, BP
PUSH R2
MOV R2, 1
ADD R1, R2
POP R2
MOV R0, [R1]
POP R1
MOV R1, 0
EQ R0, R1
POP R1
JNZ R0, or1
PUSH R1
PUSH R1
MOV R1, BP
PUSH R2
MOV R2, 1
ADD R1, R2
POP R2
MOV R0, [R1]
POP R1
MOV R1, 1
EQ R0, R1
POP R1
or1:
JZ R0, ifnot0
PUSH R1
MOV R1, 1
MOV R0, BP
PUSH R1
MOV R1, 2
ADD R0, R1
POP R1
MOV [R0], R1
POP R1
JMP endif0
ifnot0:
PUSH R1
PUSH R2
PUSH R2
MOV R2, BP
PUSH R3
MOV R3, 1
ADD R2, R3
POP R3
MOV R1, [R2]
POP R2
MOV R2, 0
PUSH R2
MOV R2, SP
PUSH R4
PUSH R4
MOV R4, BP
PUSH R5
MOV R5, 1
ADD R4, R5
POP R5
MOV R3, [R4]
POP R4
MOV R4, 1
SUB R3, R4
POP R4
PUSH R3
PUSH R2
PUSH BP
MOV BP, R2
PUSH R0
CALL factorial
POP R0
POP BP
MOV SP, R2
POP R2
MUL R1, R2
POP R2
MOV R0, BP
PUSH R1
MOV R1, 2
ADD R0, R1
POP R1
MOV [R0], R1
POP R1
endif0:
PUSH R1
MOV R1, BP
PUSH R2
MOV R2, 2
ADD R1, R2
POP R2
MOV R0, [R1]
POP R1
MOV [BP], R0
RET

main:
IN R0
PUSH R1
MOV R1, 0
MOV [R1], R0
POP R1
PUSH R1
MOV R1, 1
MOV R0, 11
MOV [R0], R1
POP R1
while2:
PUSH R1
PUSH R1
MOV R1, 11
MOV R0, [R1]
POP R1
PUSH R2
MOV R2, 0
MOV R1, [R2]
POP R2
LE R0, R1
POP R1
JZ R0, endwhile2
MOV R0, 0
PUSH R0
MOV R0, SP
PUSH R2
MOV R2, 11
MOV R1, [R2]
POP R2
PUSH R1
PUSH R0
PUSH BP
MOV BP, R0
PUSH R0
CALL factorial
POP R0
POP BP
MOV SP, R0
POP R0
OUT R0
PUSH R1
PUSH R2
PUSH R2
MOV R2, 11
MOV R1, [R2]
POP R2
MOV R2, 1
ADD R1, R2
POP R2
MOV R0, 11
MOV [R0], R1
POP R1
JMP while2
endwhile2:
MOV R0, 1
MOV [BP], R0
RET

START
MOV R0, 12
MOV SP, R0
MOV R1, 1
ADD R0, R1
MOV SP, R0
MOV R1, 0
SUB R0, R1
MOV BP, R0
CALL main
MOV R0, [BP]
OUT R0
die:
HALT
error:
MOV R0, -1
OUT R0
JMP die
